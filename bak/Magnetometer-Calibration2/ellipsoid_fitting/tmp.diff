diff --git a/ellipsoid_fitting/dcm_321_euler.m b/ellipsoid_fitting/dcm_321_euler.m
index c1fec0f..41e60c9 100644
--- a/ellipsoid_fitting/dcm_321_euler.m
+++ b/ellipsoid_fitting/dcm_321_euler.m
@@ -26,4 +26,4 @@ s3 = sin(phi);
 C = [   c2*c1,              c2*s1,              -s2;    ... 
         s3*s2*c1 - c3*s1,   s3*s2*s1 + c3*c1,   s3*c2;  ...    
         c3*s2*c1 + s3*s1,   c3*s2*s1 - s3*c1,   c3*c2  ];
-endfunction
+end
diff --git a/ellipsoid_fitting/main_sensor_calibration.m b/ellipsoid_fitting/main_sensor_calibration.m
index d4755d4..c6b0b60 100644
--- a/ellipsoid_fitting/main_sensor_calibration.m
+++ b/ellipsoid_fitting/main_sensor_calibration.m
@@ -1,3 +1,4 @@
+function main_sensor_calibration()
 % Batch 3-axis compass calibration using least squares ellipsoid fitting
 %
 % References:
@@ -9,15 +10,11 @@
 %
 % 2020/06/03
 
-clc
-clear
-close all
 
 % Import raw magnetometer readings
-file = 'sensor_data.txt'; 
 
 % Import sensor readings
-raw = importdata(file);
+raw = rand(100, 3);
 x_m = raw(:,1); 
 y_m = raw(:,2); 
 z_m = raw(:,3);
@@ -75,36 +72,12 @@ for i_iters = 1:length(x_m)
     h_hat = [x_m(i_iters); y_m(i_iters); z_m(i_iters)]; 
     
     % Calibration, Eqn(11)
-    h = matrix*(h_hat - offset);
+    hh = matrix*(h_hat - offset);
     
     % Calibrated values
-    x_hat(i_iters) = h(1);
-    y_hat(i_iters) = h(2);
-    z_hat(i_iters) = h(3);
+    x_hat(i_iters) = hh(1);
+    y_hat(i_iters) = hh(2);
+    z_hat(i_iters) = hh(3);
+end
 end
 
-% Visualization %
-% Sensor readings and ellipoid fit
-scatter3(x_m, y_m, z_m, 'fill', 'MarkerFaceColor', 'red'); hold on; 
-plot_ellipsoid(v); 
-title({'Before magnetometer calibration', '(Ellipsoid fit)'});
-xlabel('X-axis'); ylabel('Y-axis'); zlabel('Z-axis');
-axis equal;
-
-% After calibrations
-figure;
-scatter3(x_hat, y_hat, z_hat, 'fill', 'MarkerFaceColor', 'blue'); hold on;
-plot_sphere([0,0,0]', 1);
-title({'After magnetometer calibration', '(Normalized to unit sphere)'});
-xlabel('X-axis'); ylabel('Y-axis'); zlabel('Z-axis');
-axis equal;
-
-% Print calibration params
-fprintf('3D magnetometer calibration based on ellipsoid fitting');
-fprintf('\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~');
-fprintf('\nThe calibration equation to be implemented:') 
-fprintf('\n\t\t\t\th_hat = M*(h_m - b) \nWhere,')
-fprintf('\nh_m   = Measured sensor data vector');
-fprintf('\nh_hat = Calibrated sensor data vector');
-fprintf('\n\nM =\n'); disp(matrix);
-fprintf('\nb =\n'); disp(offset);
