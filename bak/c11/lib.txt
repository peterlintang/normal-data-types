
<assert.h>
NDEBUG
assert(scalar expression)
static_assert();

<complex.h>
complex
imaginary
I
cacos
casin
catan
ccos
csin
ctan
cacosh
casinh
catanh
ccosh
csinh
ctanh
cexp
clog
cabs
cpow
csqrt
carg
cimag
CMPLX
conj
cproj
creal

<ctype.h>
isalnum
isalpha
isblank
iscntrl
isdigit
isgraph
islower
isprint
ispunct
isspace
isupper
isxdigit
tolower
toupper

<errno.h>
EDOM
EILSEQ
ERANGE
errno

<fenv.h>
fenv_t
fexcept_t
FE_DIVBYZERO
FE_INEXACT
FE_INVALID
FE_OVERFLOW
FE_UNDERFLOW
FE_ALL_EXCEPT

FE_DOWNWARD
FE_TONEAREST
FE_TOWARDZERO
FE_UPWARD
fegetround
fesetround
FE_DEL_ENV
#pragma STDC FENV_ACCESS ON/OFF/SWITCH
feclearexcept
fegetexceptflag
feraiseexcept
fesetexceptflag
fetestexcept
fegetround
fesetround
fegetenv
feholdexcept
fesetenv
feupdateenv

<float.h>

<inttypes.h>
imaxdiv_t
imaxdiv
imaxabs
imaxdiv
strtoimax
strtoumax
wcstoimax
wcstoumax

<iso646.h>

<limits.h>

<locale.h>
struct lconv
NULL
LC_ALL
LC_COLLATE
LC_CTYPE
LC_MONETARY
LC_NUMERIC
LC_TIME
setlocale
localeconv

<math.h>
float_t
double_t
FLT_EVAL_METHOD
HUGE_VAL
HUGE_VALF
HUGE_VALL
INFINITY
NAN
FP_INFINITE
FP_NAN
FP_NORMAL
FP_SUBNORMAL
FP_ZERO
FP_FAST_FMA
FP_FAST_FMAF
FP_FAST_FMAL
FP_ILOGB0
FP_ILOGBNAN
MATH_ERRNO
MATH_ERREXCEPT
math_errhandling
#pragma STDC FP_CONTRACT on-off
int fpclassify(real-floating x)
int isfinite(real-floating x)
int isinf(real-floating x)
int isnan(real-floating x)
int isnormal(real-floating x)
int signbit(real-floating x)
double acos(double x)
float acosf(float x)
long double acosl(long double x)
double asin(double x)
float asinf(float x)
long double asinl(long double x)
double atan(double x)
float atanf(float x)
long double atanl(long double x)
double atan2(double y, double x)
float atanf2(float y,float x)
long double atanl2(long double y, long double x)
double cos(double x)
float cosf(float x)
long double cosl(long double x)
double sin(double x)
float sinf(float x)
long double sinl(long double x)
double tan(double x)
float tanf(float x)
long double tanl(long double x)
double acosh(double x)
float acoshf(float x)
long double acoshl(long double x)
double asinh(double x)
float asinhf(float x)
long double asinhl(long double x)
double atanh(double x)
float atanhf(float x)
long double atanhl(long double x)
double cosh(double x)
float coshf(float x)
long double coshl(long double x)
double sinh(double x)
float sinhf(float x)
long double sinhl(long double x)
double tanh(double x)
float tanhf(float x)
long double tanhl(long double x)
double exp(double x)
float expf(float x)
long double expl(long double x)
double exp2(double x)
float exp2f(float x)
long double exp2l(long double x)
double expm1(double x)
float expm1f(float x)
long double expm1l(long double x)
double frexp(double x, int *exp)
float frexpf(float x, int *exp)
long double frexpl(long double x, int *exp)
int ilogb(double x)
int ilogbf(float x)
int ilogbl(long double x)
double ldexp(double x, int exp)
float ldexpf(float x, int exp)
long double ldexpl(long double x, int exp)
double log(double x)
float logf(float x)
long double logl(long double x)
double log10(double x)
float log10f(float x)
long double log10l(long double x)
double log1p(double x)
float log1pf(float x)
long double log1pl(long double x)

double log2(double x)
float log2f(float x)
long double log2l(long double x)
double logb(double x)
float logbf(float x)
long double logbl(long double x)

double modf(double x, double *iptr)
float modff(float x, float *iptr)
long double modfl(long double x, long double *iptr)

double scalbln(double x, long exp)
float scalblnf(float x, long exp)
long double scalblnl(long double x, long exp)
double scalbn(double x, int exp)
float scalbnf(float x, int exp)
long double scalbnl(long double x, int exp)
double cbrt(double x)
float cbrtf(float x)
long double cbrtl(long double x)
double fabs(double x)
float fabsf(float x)
long double fabsl(long double x)
double hypot(double x, double y)
float hypotf(float x, float y)
long double hypotl(long double x, long double y)
double pow(double x, double y)
float powf(float x, float y)
long double powl(long double x, long double y)
double sqrt(double x)
float sqrtf(float x)
long double sqrtl(long double x)
double erf(double x)
float erff(float x)
long double erfl(long double x)
double erfc(double x)
float erfcf(float x)
long double erfcl(long double x)
double lgamma(double x)
float lgammaf(float x)
long double lgammal(long double x)
double tgamma(double x)
float tgammaf(float x)
long double tgammal(long double x)

double ceil(double x)
float ceilf(float x)
long double ceill(long double x)
double floor(double x)
float floorf(float x)
long double floorl(long double x)

double nearbyint(double x)
float nearbyintf(float x)
long double nearbyintl(long double x)
double rint(double x)
float rintf(float x)
long double rintl(long double x)
long lrint(double x)
long lrintf(float x)
long lrintl(long double x)
long long llrint(double x)
long long llrintf(float x)
long long llrintl(long double x)
double round(double x)
float roundf(float x)
long double roundl(long double x)
long lround(double x)
long lroundf(float x)
long lroundl(long double x)
long long llround(double x)
long long llroundf(float x)
long long llroundl(long double x)
double trunc(double x)
float truncf(float x)
long double truncl(long double x)
double fmod(double x, double y)
float fmodf(float x, float y)
long double fmodl(long double x, long double y)
double remainder(double x, double y)
float remainderf(float x, float y)
long double remainderl(long double x, long double y)
double drem(double x, double y)
float dremf(float x, float y)
long double dreml(long double x, long double y)
double remquo(double x, double y, int *quo)
float remquof(float x, float y, int *quo)
long double remquol(long double x, long double y, int *quo)
double copysign(double x, double y)
float copysignf(float x, float y)
long double copysignl(long double x, long double y)
double nan(const char *tagp)
float nanf(const char *tagp)
long double nanl(const char *tagp)
double nextafter(double x, double y)
float nextafterf(float x, float y)
long double nextafterl(long double x, long double y)
double nexttoward(double x, long double y)
float nexttowardf(float x, long double y)
long double nexttowardl(long double x, long double y)
double fdim(double x, double y)
float fdimf(float x, float y)
long double fdiml(long double x, long double y)
double fmax(double x, double y)
float fmaxf(float x, float y)
long double fmaxl(long double x, long double y)
double fmin(double x, double y)
float fminf(float x, float y)
long double fminl(long double x, long double y)
double fma(double x, double y, double z)
float fmaf(float x, float y, float z)
long double fmal(long double x, long double y, long double z)
int isgreater(x, y)
int isgreaterequal(x, y)
int isless(x, y)
int islessequal(x, y)
int islessgreater(x, y)
int isunordered(x, y)

<setjmp.h>
jmp_buf
int setjmp(jmp_buf env)
int sigsetjmp(sigjmp_buf env, int savesigs)
void longjmp(jmp_buf env, int val)
void siglongjmp(sigjmp_buf env, int val)

<signal.h>
sig_atomic_t
SIG_DEF
SIG_ERR
SIG_IGN
SIGABRT
SIGFPE
SIGILL
SIGINT
SIGSEGV
SIGTERM
void (*signal(int signal, void (*func)(int)))(int)
int raise(int sig)

<stdalign.h>
alignas = _Alignas 
alignof = _Alignof 
__alignas_is_defined
__alignof_is_defined

<stdarg.h>
va_list
va_start
va_arg
va_end
va_copy

<stdatomic.h>
atomic_int
ATOMIC_VAR_INIT()
atomic_init(volatile A *obj, C value)
....


<stdbool.h>
bool
true
false
__bool_true_false_are_defined

<stddef.h>
ptrdiff_t
size_t
max_align_t
wchar_t
NULL
offsetof

<stdint.h>
intN_t // N: 8 16 24 32 64 ...
uintN_t // N: 8 16 24 32 64 ...
int_leastN_t
uint_leastN_t
int_fastN_t
uint_fastN_t
intptr_t
uintptr_t
intmax_t
uintmax_t
INTN_MIN	-(2^(N - 1))
INTN_MAX	(2^(N - 1) - 1)
UINTN_MAX	(2^N - 1)
INT_LEASTN_MIN	-(2^(N - 1))
INT_LEASTN_MAX	(2^(N - 1) - 1)
UINT_LEASTN_MAX	(2^N - 1)
INT_FASTN_MIN	-(2^(N - 1))
INT_FASTN_MAX	(2^(N - 1) - 1)
UINT_FASTN_MAX	(2^N - 1)
INTPTR_MIN	-(2^15 - 1)
INTPTR_MAX	2^15 - 1
UINTPTR_MAX	2^16 - 1
INTMAX_MIN	-(2^63 - 1)
INTMAX_MAX	(2^63 - 1)
UINTMAX_MAX	(2^64 - 1)
PTRDIFF_MIN	-65535 may change
PTRDIFF_MAX	65535	may change 
SIZE_MAX	65535
WCHAR_MIN
WCHAR_MAX
WINT_MIN
WINT_MAX
SIG_ATOMIC_MIN
SIG_ATOMIC_MAX

INTN_C(value)	// N: 8 16 24 32 64 ... int_leastN_t
UINTN_C(value)	// N: 8 16 24 32 64 ... uint_leastN_t
INTMAX_C(value)		// intmax_t
UINTMAX_C(value)	// uintmax_t

<stdio.h>
FILE
fpos_t
_IOFBF
_IOLBF
_IONBF
BUFSIZ
EOF
FOPEN_MAX
FILENAME_MAX
L_tmpnam
SEEK_CUR
SEEK_END
SEEK_SET
TMP_MAX
stderr
stdin
stdout
setvbuf
setbuf
tmpnam
fseek

fgetwc
fgetws
getwc
getwchar
fwscanf
wscanf
vfwscanf
vwscanf

fputwc
fputws
putwc
putwchar
fwprintf
wprintf
vfwprintf
vwprintf
ungetwc

fgetc
fgets
fprintf
fputc
fputs
fread
fscanf
fwrite
getc
getchar
printf
putc
putchar
puts
scanf
ungetc
vfprintf
vfscanf
vpintf
vscanf

BUFSIZ
EILSEQ
FOPENMAX

remove
rename
tmpfile
TMPMAX
tmpnam
fclose
fflush
fopen
freopen
setbuf
setvbuf

fprintf
fscanf
printf
scanf
snprintf
sprintf
sscanf
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf

fgetc
feof
ferror
fgets
fputc
fputs
getc
getchar
putc
putchar
puts
ungetc

fread
fwrite
fgetpos
fsetpos
fseek
SEEK_SET
SEEK_CUR
SEEK_END
ftell
rewind
clearerr
feof
ferror
perror

<stdlib.h>

